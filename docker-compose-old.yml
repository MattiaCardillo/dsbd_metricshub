version: '3.8'
services:
  etldatapipeline:
    build:
      context: .
      dockerfile: ./etldatapipeline/Dockerfile
    command: 'python ./etldatapipeline/main.py'
    environment:
      - isDocker=true
    ports:
      - 5000:5000
    volumes:
      - .:/etldatapipeline
  datastorage:
    build:
      context: .
      dockerfile: ./datastorage/Dockerfile
    command: 'python ./datastorage/main.py'
    ports:
      - 5001:5001
    volumes:
      - .:/datastorage
    environment:
      - isDocker=true
    depends_on:
      - db
    entrypoint: ["python", "./datastorage/scripts/create_tables.py"]
  dataretrieval:
    build:
      context: .
      dockerfile: ./dataretrieval/Dockerfile
    command: 'python ./dataretrieval/main.py'
    environment:
      - isDocker=true
    ports:
      - 5002:5002
    volumes:
      - .:/dataretrieval
    depends_on:
          - db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: hegr.TEeH.243
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080